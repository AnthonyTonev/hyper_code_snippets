{
        "title": "console",
        "description": "simple console interface",
        "files":[],
        "code":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  \n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n<style>\n      textarea {\n        font-family:Consolas, monaco, monospace;\n    overflow: hidden;\n    padding: 0;\n    outline: none;\n       border:none;\n      background:black;\n        color:white;\n}\n      body{\n        border:none;\n      background:black;\n        color:white;\n    }</style>\n</head>\n<body onload=\"init();\">\n     <textarea rows=\"1\" style=\"width:100%;height:1em;\" id=\"result\"> </textarea>\n\t<script>\n       const text = document.getElementById('result');\n       let observe;\nif (window.attachEvent) {\n    observe = function (element, event, handler) {\n        element.attachEvent('on'+event, handler);\n    };\n}\nelse {\n    observe = function (element, event, handler) {\n        element.addEventListener(event, handler, false);\n    };\n}\nfunction init () {\n \n    function resize () {\n        text.style.height = 'auto';\n        text.style.height = text.scrollHeight+'px';\n    }\n    /* 0-timeout to get the already changed text */\n    function delayedResize () {\n        window.setTimeout(resize, 0);\n    }\n    observe(text, 'change',  resize);\n    observe(text, 'cut',     delayedResize);\n    observe(text, 'paste',   delayedResize);\n    observe(text, 'drop',    delayedResize);\n    observe(text, 'keydown', delayedResize);\n\n    text.focus();\n    //text.select();\n    resize();\n \t\n}\n\n  </script>\n   <script>\n  \tconst _ = {};\n  \n  </script>\n<script>\n\nconst print = (...args)=> text.value += '\\n'+args.map(item=>JSON.stringify(item)).join('\\n');\nconst clear = () => text.value = '';\n  document.addEventListener(\"keypress\", (e) => {\n    if (e.key === \"Enter\" ) {\n      const lines = text.value.split('\\n');\n      if(document.activeElement === text){\n        let val = lines[lines.length-1];\n        if(val.includes(\">.\")){\n         \tval = val.replace(\">.\",\"print(\");\n          val+=')';\n        }\n        new Function(`\"use strict\";  return ((()=>${val})())`)();\n      }\n    }\n  });\n\n</script>\n \n</body>\n</html>"
}
